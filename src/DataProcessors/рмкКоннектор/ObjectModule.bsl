#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Компонента;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура Инициализировать() Экспорт
	
	ВерсияКомпоненты = рмкОбщегоНазначенияПовтИсп.ПолучитьВерсиюКомпонентыRQM();
    ПодключениеВКУспешно = ПодключитьВнешнююКомпоненту("ОбщийМакет." + ВерсияКомпоненты, "BITERP", ТипВнешнейКомпоненты.Native);
    
    Если Не ПодключениеВКУспешно Тогда
    	ВызватьИсключение "Не удалось подключить внешнюю компоненту PinkRabbitMQ";
    КонецЕсли;	
    
    Компонента = Новый("AddIn.BITERP.PinkRabbitMQ3"); 
   	
КонецПроцедуры

Процедура Закрыть() Экспорт
	
	Компонента = Неопределено;
	
КонецПроцедуры

Процедура Подключиться(ВиртуальныйХост) Экспорт
	
	ПараметрыВиртуальногоХоста = рмкОбщегоНазначенияПереопределяемый.ЗначенияРеквизитовОбъекта(ВиртуальныйХост, "Владелец,Наименование");
	ПараметрыСервера = рмкОбщегоНазначенияПереопределяемый.ЗначенияРеквизитовОбъекта(ПараметрыВиртуальногоХоста.Владелец, "Адрес,Порт,ИмяПользователя,Пароль");
	
	ПроверитьЗаполненностьПараметра(ПараметрыСервера.Адрес, 			"Адрес сервера");
	ПроверитьЗаполненностьПараметра(ПараметрыВиртуальногоХоста.Наименование, "Имя виртуального хоста");
	ПроверитьЗаполненностьПараметра(ПараметрыСервера.Порт, 				"Порт сервера");
	ПроверитьЗаполненностьПараметра(ПараметрыСервера.ИмяПользователя, 	"Имя пользователя подключения");
	ПроверитьЗаполненностьПараметра(ПараметрыСервера.Пароль, 			"Пароль пользователя подключения");
	
	Компонента.Connect(ПараметрыСервера.Адрес, ПараметрыСервера.Порт, ПараметрыСервера.ИмяПользователя, ПараметрыСервера.Пароль, ПараметрыВиртуальногоХоста.Наименование);
	
КонецПроцедуры

Процедура ОтправитьСообщение(Сообщение) Экспорт
	
	ИмяТочки = рмкОбщегоНазначенияПереопределяемый.ЗначениеРеквизитаОбъекта(Сообщение.ТочкаПодключения, "ИмяТочки");
	СодержимоеСообщения = Сообщение.Данные.Получить();
	
	Попытка
	
		Компонента.BasicPublish("", ИмяТочки, СодержимоеСообщения, 0, Ложь);
		рмкОбработкаСообщений.ЗафиксироватьСтатусСообщения(Сообщение.Ссылка, "Отправлено");
		
	Исключение
		
		ПодробноеПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		рмкОбработкаСообщений.ЗафиксироватьСтатусСообщения(Сообщение, "Ошибка", ПодробноеПредставлениеОшибки);
		
		ЗаписьЖурналаРегистрации(рмкОбщегоНазначения.ПрефиксСобытияЖурналаРегистрации() + "Отправка сообщения", 
										УровеньЖурналаРегистрации.Ошибка, , ИмяТочки, ПодробноеПредставлениеОшибки);
		
	КонецПопытки	
	
КонецПроцедуры	

Процедура ПолучитьСообщенияИзОчереди(СлушательОчереди) Экспорт
	
	ПрочитанноеСообщение = "";
    ТегСообщения = 0;
	
	Попытка
		
		ИмяОчереди = рмкОбщегоНазначенияПереопределяемый.ЗначениеРеквизитаОбъекта(СлушательОчереди, "ИмяОчереди");
        Компонента.BasicConsume(ИмяОчереди, "", Ложь, Ложь, 100);
        
        Пока Компонента.BasicConsumeMessage("", ПрочитанноеСообщение, ТегСообщения, 5000) Цикл
           
           	рмкОбработкаСообщений.СоздатьВходящееСообщение(СлушательОчереди, ПрочитанноеСообщение);
           
            // TODO сделать подтверждение только в случае успешного принятия сообщения
            Компонента.BasicAck(ТегСообщения);
            ПрочитанноеСообщение = ""; 			// Обнуляем, чтобы избежать утечку памяти
            ТегСообщения = 0; 					// Обнуляем, чтобы избежать утечку памяти
            
        КонецЦикла;
        
        Компонента.BasicCancel("");
        
    Исключение
       
        ОписаниеОшибки = Компонента.GetLastError();
		ЗаписьЖурналаРегистрации(рмкОбщегоНазначения.ПрефиксСобытияЖурналаРегистрации() + "Ошибка получения сообщений", 
									УровеньЖурналаРегистрации.Ошибка, , СлушательОчереди, ОписаниеОшибки);
        
    КонецПопытки;
	
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполненностьПараметра(ЗначениеПараметра, ИмяПараметра)
	
	Если ТипЗнч(ЗначениеПараметра) = Тип("Строка") И ПустаяСтрока(ЗначениеПараметра)
		Или Не ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		
		ВызватьИсключение СтрШаблон("Не заполнено значения параметра ""%1"" при подключении к серверу RMQ!", ИмяПараметра);
		
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли
